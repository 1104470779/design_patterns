<?xml version="1.0" encoding="UTF-8"?>
<!--设置log4j2的自身log级别为warn-->
<!--日志级别以及优先级排序: OFF > FATAL > ERROR > WARN > INFO > DEBUG > TRACE > ALL -->
<!--Configuration后面的status，这个用于设置log4j2自身内部的信息输出，可以不设置，
    当设置成trace时，你会看到log4j2内部各种详细输出-->
<!--monitorInterval：Log4j能够自动检测修改配置 文件和重新配置本身，设置间隔秒数-->
<Configuration status="TRACE">
    <Properties>
        <Property name="LOG_ROOT" value="${sys:ljm.log.path:-logs}"></Property>
        <Property name="BACKUP_FOLDER">${LOG_ROOT}/bak</Property>
<!--        %-5level 输出日志级别，-5表示左对齐并且固定输出5个字符，如果不足在右边补0-->
        <Property name="logFormat">%d{yyyy-MM-dd HH:mm:ss},%L  %t %p %C{1.} --->> %9m%n</Property>
        <Property name="errFormat">%d{yyyy-MM-dd HH:mm:ss} [%t] %-5level %C - %m%n %ex%n</Property>
    </Properties>
    <!--先定义所有的appender-->
    <Appenders>
        <!--这个输出控制台的配置-->
        <Console name="Console" target="SYSTEM_OUT">
            <!--输出日志的格式-->
            <PatternLayout pattern="${logFormat}"/>
        </Console>
<!--关键点在于 filePattern后的日期格式，以及TimeBasedTriggeringPolicy的interval，日期格式精确到哪一位，interval也精确到哪一个单位-->
        <RollingFile name="errorLog" fileName="${LOG_ROOT}/error.log" immediateFlush = "true">
            <FilePattern>${BACKUP_FOLDER}/error.log.%d{yyyy-MM-dd}.gz</FilePattern>
            <PatternLayout pattern="${errFormat}"/>
            <Policies>
                <TimeBasedTriggeringPolicy interval="1" modulate="true" />
            </Policies>
        </RollingFile>
        <RollingFile name="infoLog" fileName="${LOG_ROOT}/info.log" immediateFlush = "true">
            <FilePattern>${BACKUP_FOLDER}/info.log.%d{yyyy-MM-dd}.gz</FilePattern>
            <PatternLayout pattern="${logFormat}"/>
            <Policies>
                <TimeBasedTriggeringPolicy interval="1" modulate="true" />
            </Policies>
        </RollingFile>
        <RollingFile name="debugLog" fileName="${LOG_ROOT}/debug.log" >
            <FilePattern>${BACKUP_FOLDER}/debug.log.%d{yyyy-MM-dd}.gz</FilePattern>
            <PatternLayout pattern="${logFormat}"/>
            <Policies>
                <TimeBasedTriggeringPolicy interval="1" modulate="true" />
            </Policies>
        </RollingFile>
    </Appenders>
    <Loggers>
<!-- 默认情况下子Logger会继承父Logger的appender，也就是说子Logger会在父Logger的appender里输出,并且日志级别高于info的也会打印出来。-->
        <logger name="errorLogger" level="error" additivity="false">
            <AppenderRef ref="errorLog"/>
            <AppenderRef ref="Console"/>
        </logger>
        <logger name="infoLogger" level="info" additivity="false">
            <AppenderRef ref="infoLog"/>
            <AppenderRef ref="Console"/>
        </logger>
        <logger name="debugLogger" level="debug" additivity="false">
            <AppenderRef ref="debugLog"/>
            <AppenderRef ref="Console"/>
        </logger>
<!--        root相当于logger的父级，Logger会在父Logger的appender里输出-->
        <Root level="info">
            <AppenderRef ref="respLog"/>
            <AppenderRef ref="Console"/>
        </Root>
    </Loggers>
</Configuration>